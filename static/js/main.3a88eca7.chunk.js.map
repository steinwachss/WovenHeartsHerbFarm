{"version":3,"sources":["img/vector logo.png","img/master2.png","img/fillermain.jpg","img/fillslide.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","id","src","logo","alt","href","target","kickStart","videoThumb","slideThumb","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","fill","d","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,+NC+D5BC,MAxDf,WACE,OACE,yBAAKC,UAAU,gBACb,4BAAQA,UAAU,cAChB,yBAAKC,GAAG,WAAWC,IAAKC,IAAMC,IAAI,KAClC,wBAAIH,GAAG,aAAP,2BAEF,yBAAKA,GAAG,UACN,uBAAGI,KAAK,IAAIC,OAAO,UAAS,yBAAKJ,IAAKK,IAAWH,IAAI,GAAGH,GAAG,gBAE7D,yBAAKA,GAAG,SACN,yBAAKC,IAAKM,IAAYJ,IAAI,MAE5B,0BAAMH,GAAG,eACP,yBAAKA,GAAG,SACN,wBAAID,UAAU,UAAd,aACA,yBAAKC,GAAG,YACN,uBAAGA,GAAG,SAAQ,oOAAd,IAAgO,gnBAChO,uBAAGA,GAAG,UAAS,uEAA4C,8CAA5C,cAEjB,4BACE,4BAAI,2BAAG,qIACP,4BAAI,2BAAG,0LACP,4BAAI,2BAAG,iLAGX,yBAAKA,GAAG,aACN,yBAAKC,IAAKO,IAAYL,IAAI,OAG9B,yBAAKH,GAAG,oBACN,yBAAKA,GAAG,WACN,wBAAID,UAAU,UAAd,cACA,4BACE,mDACA,wDAGJ,yBAAKC,GAAG,UACR,uBAAGI,KAAK,GAAGC,OAAO,UAChB,yBAAKI,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,YAAYC,MAAM,sCAAsCC,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,KAAK,eAAeC,EAAE,i6BAEhO,uBAAGd,KAAK,GAAGC,OAAO,UAChB,yBAAKL,GAAG,WAAWS,cAAY,OAAOC,UAAU,QAAQC,cAAY,MAAMC,YAAU,gBAAgBC,MAAM,0CAA0CC,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,KAAK,eAAeC,EAAE,6SAIxP,4BAAQlB,GAAG,cACT,yBAAKA,GAAG,QACN,mEC5CUmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3a88eca7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vector logo.156a8b3d.png\";","module.exports = __webpack_public_path__ + \"static/media/master2.6d06ed4c.png\";","module.exports = __webpack_public_path__ + \"static/media/fillermain.3523fbf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fillslide.c39fc956.jpg\";","import React from 'react';\r\nimport logo from './img/vector logo.png'\r\nimport kickStart from './img/master2.png'\r\nimport videoThumb from './img/fillermain.jpg'\r\nimport slideThumb from './img/fillslide.jpg'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <header className=\"app-header\">\r\n        <img id=\"mainLogo\" src={logo} alt=\"\"/>\r\n        <h1 id=\"titleText\">Woven Hearts Herb Farm</h1>\r\n      </header>\r\n      <div id=\"banner\">\r\n        <a href=\"#\" target=\"_blank\"><img src={kickStart} alt=\"\" id=\"kickStart\"/></a>\r\n      </div>\r\n      <div id=\"video\">\r\n        <img src={videoThumb} alt=\"\"/>\r\n      </div>\r\n      <main id=\"mainContent\">\r\n        <div id=\"about\">\r\n          <h2 className=\"script\">our story</h2>\r\n          <div id=\"aboutTxt\">\r\n            <p id=\"first\"><strong>Our passion for this project is deeply driven by our love of plants. Woven Hearts Herb Farm is a budding business that aims to produce medicinal plants for the healing hearts in our community.</strong> <em>Our microfarm will supply bulk dried herbs to apothecaries, provide seasonal access to fresh plant material for local healers, and sell medicinal and culinary herb products at farmer's market. Here in Humboldt County we have a highly conscious consumer base with a desire to support local agriculture.  Many community members have experienced the holistic benefits of incorporating healing plants into their lives, whether in the medicine cabinet, the kitchen, or in a simple cup of tea.  Did you know, however, that the cup of chamomile you enjoy could have been grown as far away as Egypt?</em></p>\r\n            <p id=\"second\"><em>We want to produce these plants because <strong>we believe</strong> that...</em></p>\r\n          </div>\r\n          <ul>\r\n            <li><p><em>Herbs grown within the county can provide the community with the freshest plant medicine available.</em></p></li>\r\n            <li><p><em>Medicine from plants is best when grown with love and care: A positive interaction between plant and people can be felt by those consuming the medicine.</em></p></li>\r\n            <li><p><em>Those who tend the land with care also tend the community with care.  Local, responsible agriculture fosters wholeness within the community. </em></p></li>\r\n          </ul>\r\n        </div>\r\n        <div id=\"slideshow\">\r\n          <img src={slideThumb} alt=\"\"/>\r\n        </div>\r\n      </main>\r\n      <div id=\"contactContainer\">\r\n        <div id=\"contact\">\r\n          <h2 className=\"script\">contact us</h2>\r\n          <ul>\r\n            <li>phone: 555-555-5555</li>\r\n            <li>email: email@email.com</li>\r\n          </ul>\r\n        </div>\r\n        <div id=\"social\">\r\n        <a href=\"\" target=\"_blank\">\r\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"instagram\" class=\"svg-inline--fa fa-instagram fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z\"></path></svg>\r\n        </a>\r\n        <a href=\"\" target=\"_blank\">\r\n          <svg id=\"kickLogo\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"kickstarter-k\" class=\"svg-inline--fa fa-kickstarter-k fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M147.3 114.4c0-56.2-32.5-82.4-73.4-82.4C26.2 32 0 68.2 0 113.4v283c0 47.3 25.3 83.4 74.9 83.4 39.8 0 72.4-25.6 72.4-83.4v-76.5l112.1 138.3c22.7 27.2 72.1 30.7 103.2 0 27-27.6 27.3-67.4 7.4-92.2l-90.8-114.8 74.9-107.4c17.4-24.7 17.5-63.1-10.4-89.8-30.3-29-82.4-31.6-113.6 12.8L147.3 185v-70.6z\"></path></svg>\r\n        </a>\r\n        </div>\r\n      </div>\r\n      <footer id=\"mainFooter\">\r\n        <div id=\"copy\">\r\n          <p>&copy; Woven Hearts Herb Farm 2019</p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}